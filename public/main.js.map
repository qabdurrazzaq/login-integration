{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Mean Auth App</h1>\n  <p class=\"lead\">Welcome to Mean Auth App</p>\n  <div>\n    <a class=\"btn btn-primary\" [routerLink] = \"['/register']\">Register</a> &nbsp;\n    <a class=\"btn btn-primary\" [routerLink] = \"['/login']\">Login</a>\n  </div>\n</div>\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username : {{user.username}}</li>\n    <li class=\"list-group-item\">Email : {{user.email}}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service'\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user : Object;\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage : FlashMessagesService,\n    private authService : AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(profile => {\n      //console.log(profile['user'].name);\n      this.user = profile['user'];\n    },\n    err =>{\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p class=\"lead\">Welcome to Dashboard</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService : AuthService, private router: Router){ }\r\n\r\n  canActivate ()\r\n  {\r\n      if(!this.authService.loggedIn()){\r\n        return true;\r\n      }\r\n\r\n      else{\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ValidateService } from '../../services/validate.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username : String;\n  password : String;\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage : FlashMessagesService,\n    private authService : AuthService,\n    private router: Router\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username : this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data =>{\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show(\"You are now logged in\", {cssClass : 'alert-success', timeout: 3000});\n        this.router.navigate(['/dashboard']);\n      }\n      else{\n        this.flashMessage.show(\"Invalid Username or Password\", {cssClass : 'alert-danger', timeout: 3000});\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n}\n","<form (submit) = \"onLoginSubmit()\">\n  <legend>Login</legend>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Username</label>\n    <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" [(ngModel)]=\"username\" name=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Enter Username\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n// import { threadId } from 'worker_threads';\nimport { ValidateService } from '../../services/validate.service'\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name : String;\n  username :String;\n  email :String;\n  password :String;\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage : FlashMessagesService,\n    private authService : AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name : this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show(\"Please fill all the details\", {cssClass : 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show(\"Invalid Email\", {cssClass : 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show(\"User Registered Sucessfully, Kindly Login\", {cssClass : 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      }\n      else{\n        this.flashMessage.show(\"Something Went Wrong, Try Again\", {cssClass : 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n\n  }\n\n}\n","<form (submit) = \"onRegisterSubmit()\">\n  <legend>Registration</legend>\n  <div class=\"form-group\">\n    <label for=\"fullname\">Full Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"fullname\" [(ngModel)]=\"name\" name=\"name\" placeholder=\"Enter your full name\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Enter username\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" [(ngModel)]=\"email\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport {JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { AuthGuard } from './guards/auth.guard'\nconst appRoutes:  Routes = [\n  { path:'', component: HomeComponent },\n  { path:'register', component: RegisterComponent },\n  { path:'login', component: LoginComponent },\n  { path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  { path:'profile', component: ProfileComponent, canActivate:[AuthGuard] }\n];\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"access_token\");\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:4200\",\"localhost:3000\"],\n        disallowedRoutes: [\"http://example.com/examplebadroute/\"],\n      },\n    })\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    HttpClientModule,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined){\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n    validateEmail(email){\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a class=\"navbar-brand\" [routerLink] = \"['/']\">Mean Auth App</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{ exact: true}\">\n        <a class=\"nav-link\" [routerLink] = \"['/']\">Home\n          <span class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto\">\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{ exact: true}\">\n        <a class=\"nav-link\" [routerLink] = \"['/dashboard']\">Dashboard</a>\n      </li>\n      <li *ngIf = \"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{ exact: true}\">\n        <a class=\"nav-link\" [routerLink] = \"['/profile']\">Profile</a>\n      </li>\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{ exact: true}\">\n        <a class=\"nav-link\" [routerLink] = \"['/register']\">Register</a>\n      </li>\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{ exact: true}\">\n        <a class=\"nav-link\" [routerLink] = \"['/login']\">Login</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\" >Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ValidateService } from '../../services/validate.service';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage : FlashMessagesService,\n    public authService : AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show(\"User Logged Out\", {cssClass:'alert-success', timeout:3000} );\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService  } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken : any;\n  user : any;\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers}).pipe(map((res : any) => res));\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers}).pipe(map((res : any) => res));\n  }\n\n  getProfile(){\n    // let headers = new HttpHeaders();\n    this.loadToken();\n    let headers = new HttpHeaders({'Authorization': this.authToken, 'Content-Type': 'application/json'});\n    return this.http.get('http://localhost:3000/users/profile',{headers:headers});\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    return this.authToken;\n  }\n\n  storeUserData(token,user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn(){\n    this.authToken = this.loadToken();\n    return this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}